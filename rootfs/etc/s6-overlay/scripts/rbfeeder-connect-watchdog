#!/command/with-contenv bash
#shellcheck shell=bash disable=SC1091,SC2207,SC2206

source /scripts/common
s6wrap=(s6wrap --quiet --timestamps --prepend="$(basename "$0")" --args)

bad_servers=()
bad_server_names=()

while true; do
    while read -r L; do
        if grep -q 'Could not start connection. Timeout.' <<< "$L"; then
            readarray -t current_bad <<< "$(netstat -tn | awk -F'[ :]*' '/33755/ {print $6}')"
            readarray -t current_bad_server_names <<< "$(netstat -tW | awk -F'[ :]*' '/33755/ {print $6}')"
            bad_servers+=(${current_bad[@]})
            bad_server_names+=(${current_bad_server_names[@]})
            readarray -t bad_servers <<< "$(printf "%s\n" "${bad_servers[@]}" | sort -u)"
            readarray -t bad_server_names <<< "$(printf "%s\n" "${bad_server_names[@]}" | sort -u)"
            "${s6wrap[@]}" echo "[WARNING] rbfeeder connected to a bad server"
            "${s6wrap[@]}" echo "          current: ${current_bad[*]}; total bad list: ${bad_servers[*]}"
            "${s6wrap[@]}" echo "          current: ${current_bad_server_names[*]}; total bad list: ${bad_server_names[*]}"
            "${s6wrap[@]}" echo "          restarting rbfeeder process"
            # this is cleaner than pkill or pidof because we don't know the exact command line (with or without qemu)
            kill "$(ps -ef |awk '/rbfeeder_arm/ && !/awk/ {print $2}')"
            echo > "$RBFEEDER_LOG_FILE"
        elif grep -q 'Connection with RadarBox24 server OK'  <<< "$L"; then
            "${s6wrap[@]}" echo "[INFO] rbfeeder connected to a good server!"
            "${s6wrap[@]}" echo "       $( netstat -tn | awk -F'[ :]*' '/33755/ && /ESTABLISHED/ {print $6}')"
            "${s6wrap[@]}" echo "       $( netstat -tW | awk -F'[ :]*' '/33755/ && /ESTABLISHED/ {print $6}')"
            # now do nothing as long as rbfeeder_arm is running:
            tail -f -s 5 --pid="$(ps -ef |awk '/rbfeeder_arm/ && !/awk/ {print $2}')" /dev/null
        fi
    done < "$RBFEEDER_LOG_FILE"
    sleep 5
done
