#!/command/with-contenv bash
#shellcheck shell=bash disable=SC2016,SC1091,SC2154

source /scripts/common
set -e

WATCHDOG_TIMER="${WATCHDOG_TIMER:-300}"
if (( WATCHDOG_TIMER < 70 )); then WATCHDOG_TIMER=70; fi

if [[ $(s6-svdt /run/service/watchdog | wc -l) == 0 ]]; then
    # don't do anything on first run
    exec sleep "$WATCHDOG_TIMER"
fi

HEALTHY=true
TIMESTAMP_NOW="$(date +%s)"
LASTLOG_PACKETS_SENT="$(grep "Packets sent in the last 60 seconds" "$RBFEEDER_LOG_FILE" | tail -1 | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g")"
LASTLOG_TIMESTAMP="$(date --date="$(echo "$LASTLOG_PACKETS_SENT" | cut -d '[' -f 2 | cut -d ']' -f 1)" +%s)"
LASTLOG_NUM_PACKETS_SENT="$(echo "$LASTLOG_PACKETS_SENT" | cut -d ']' -f 2 | cut -d ':' -f 2 | cut -d ',' -f 1 | tr -d ' ')"

# check to make sure we've sent packets recently
if (( (TIMESTAMP_NOW - LASTLOG_TIMESTAMP) > WATCHDOG_TIMER )) || (( LASTLOG_NUM_PACKETS_SENT <= 1 )); then
    "${s6wrap[@]}" echo "[WARNING] No packets sent in past $WATCHDOG_TIMER seconds. Restarting rbfeeder binary"
    HEALTHY=false
else
    if chk_enabled "$VERBOSE_LOGGING"; then "${s6wrap[@]}" echo "[INFO] $LASTLOG_NUM_PACKETS_SENT packets sent in past 30 seconds. HEALTHY"; fi 
fi

CUR_BEASTIP="$(sed -n 's/external_host=\(.*\)/\1/p' /etc/rbfeeder.ini)"

# Check TCP connection to CUR_BEAST_IP
if ! netstat -tpn | grep -qs -e "$CUR_BEASTIP:$BEASTPORT *ESTABLISHED"; then
    "${s6wrap[@]}" echo "[WARNING] No TCP connection to $BEASTHOST:$BEASTPORT. Restarting rbfeeder binary"
    HEALTHY=false
else
    if chk_enabled "$VERBOSE_LOGGING"; then "${s6wrap[@]}" echo "[INFO] TCP connection to $BEASTHOST:$BEASTPORT established. HEALTHY"; fi
fi

# check that BEASTHOST's IP hasn't changed
NEW_BEASTIP="$(s6-dnsip4 "$BEASTHOST" 2>/dev/null | head -1)" || true
if [[ -z "$NEW_BEASTIP" ]]; then 
    # if s6-dnsip4 didn't return an IP address, it was probably because it BEASTHOST was already an IP address
    # or because the hostname couldn't be resolved. In either case - we don't bother watchdogging it
    NEW_BEASTIP="$CUR_BEASTIP"
fi
if [[ "$CUR_BEASTIP" != "$NEW_BEASTIP" ]]; then
    "${s6wrap[@]}" echo "[WARNING] $BEASTHOST changed IP address from $CUR_BEASTIP to $NEW_BEASTIP. Restarting rbfeeder binary"
    sed -i 's/\(external_host=\).*/\1'"$NEW_BEASTIP"'/g' /etc/rbfeeder.ini
    HEALTHY=false
fi

# Now restart rbfeeder if HEALTHY=false:
if [[ "$HEALTHY" == false ]]; then
    s6-svc -r /run/service/rbfeeder
elif chk_enabled "$VERBOSE_LOGGING"; then
    "${s6wrap[@]}" echo "[INFO] Watchdog ran and all watched items are OK"
fi

exec sleep "$WATCHDOG_TIMER"
